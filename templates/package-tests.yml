stages:
  - configuration validation
  - package tests


configuration validation:
  stage: configuration validation

  image: 
    name: registry.dsop.io/platform-one/private/big-bang/pipeline-templates/k3d-builder:bc04d825

  script:
    # Place configuration validation tests here
    - echo "Directory Structure of repository"
    - tree .
    - echo "Configuration validation tests go here"
    - helm conftest chart  --policy policy


package tests:
  stage: package tests
  tags:
    - bigbang
    - public
    - privileged

  image: 
    name: registry.dsop.io/platform-one/private/big-bang/pipeline-templates/k3d-builder:bc04d825
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://localhost:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""

  before_script:
    # Starting dnsmasq for cluster dns resolution
    - docker run -d -p 53:53/udp -p 53:53 janeczku/go-dnsmasq:release-1.0.7
    - echo "nameserver 127.0.0.1" >> /etc/resolv.conf

    # Create cluster and wait for deployments and pods
    - k3d cluster create package-pipline-${CI_PROJECT_NAME} --k3s-server-arg "--disable=metrics-server" --k3s-server-arg "--disable=traefik" -p 80:80@loadbalancer -p 443:443@loadbalancer --wait --agents 1 --servers 1
    - while ! (kubectl get node | grep "agent" > /dev/null); do sleep 3; done
    - kubectl wait --for=condition=available --timeout 600s -A deployment --all > /dev/null
    - kubectl wait --for=condition=ready --timeout 600s -A pods --all --field-selector status.phase=Running > /dev/null

  script:
    # Place kubernetes package test here
    - echo "Package install"
    - helm install ${CI_PROJECT_NAME} chart -n ${CI_PROJECT_NAME} --create-namespace -f tests/test-values.yml
    - kubectl wait --for=condition=available --timeout 600s -A deployment --all > /dev/null
    - kubectl wait --for=condition=ready --timeout 600s -A pods --all --field-selector status.phase=Running > /dev/null
    - echo "Package tests"
    - kubectl get ingress --all-namespaces
    - kubectl get all -A
#    - cypress run --spec tests/cypress/

  after_script:
    # Delete Cluster
    - k3d cluster delete package-pipline-${CI_PROJECT_NAME}
