# Rules for when pipeline runs
workflow:
  rules:
    # Never run on docs branch
    - if: $CI_COMMIT_BRANCH == "docs"
      when: never
    - when: always

include:
  - local: '/library/templates.yaml'

before_script:
  - poetry install --no-dev
  - npm install --global prettier
  - npm ci

stages:
  - dry-run
  - test
  - scheduled

bb-docs:on-schedule-tag:
  extends:
    - .generic-runner-tags
    - .util-image
  stage: scheduled
  only:
    refs:
      - schedules
    variables:
      - $TAG == "true"
  script:
    - cd ..
    - git clone "https://docs.gen:${DOCS_GEN_TOKEN}@repo1.dso.mil/platform-one/big-bang/apps/product-tools/bb-docs-compiler.git" scheduled-build
    - cd scheduled-build
    - git checkout docs
    - git checkout main
    - poetry install --no-dev
    - npm ci
    - git config user.email "docs.gen@bigbang.dev"
    - git config user.name "docs.gen"
    - poetry run bb-docs-compiler --no-build
    - poetry run mkdocs serve &>/dev/null &
    - |
      counter=10
      while [ $(curl -LI http://localhost:8000 -o /dev/null -w '%{http_code}\n' -s) -ne 200 ]
      do
        if [ $counter -eq 0 ]
        then
          echo "Timed out waiting for "localhost:8000" to be ready"
          exit 1
        fi
        counter=$(($counter - 1))
        echo "[$((10 - $counter))/10] Waiting for 'localhost:8000' to be ready"
        sleep 15
      done
    - PLAYWRIGHT_BROWSERS_PATH="/ms-playwright" npm test
    - poetry run mike deploy --branch docs --template docs-compiler/templates/redirect.html "$(poetry run bb-docs-info latest-bb-tag)"
    - git checkout docs -- &>/dev/null
    - git show main:docs-compiler/templates/index.html > index.html
    - if git diff --name-only | grep --quiet index.html; then git add index.html; git commit -m "update index.html"; fi
    - git checkout main &>/dev/null
    - git push origin docs

bb-docs:on-schedule-latest:
  extends:
    - .generic-runner-tags
    - .util-image
  stage: scheduled
  only:
    refs:
      - schedules
    variables:
      - $LATEST == "true"
  script:
    - cd ..
    - git clone "https://docs.gen:${DOCS_GEN_TOKEN}@repo1.dso.mil/platform-one/big-bang/apps/product-tools/bb-docs-compiler.git" scheduled-build
    - cd scheduled-build
    - git checkout docs
    - git checkout main
    - poetry install --no-dev
    - npm ci
    - git config user.email "docs.gen@bigbang.dev"
    - git config user.name "docs.gen"
    - poetry run bb-docs-compiler -b master --no-build
    - poetry run mkdocs serve &>/dev/null &
    - |
      counter=10
      while [ $(curl -LI http://localhost:8000 -o /dev/null -w '%{http_code}\n' -s) -ne 200 ]
      do
        if [ $counter -eq 0 ]
        then
          echo "Timed out waiting for "localhost:8000" to be ready"
          exit 1
        fi
        counter=$(($counter - 1))
        echo "[$((10 - $counter))/10] Waiting for 'localhost:8000' to be ready"
        sleep 15
      done
    - PLAYWRIGHT_BROWSERS_PATH="/ms-playwright" npm test
    - poetry run mike delete --branch docs "latest"
    - poetry run mike deploy --branch docs --update-aliases --template docs-compiler/templates/redirect.html "latest"
    - git checkout docs -- &>/dev/null
    - jq -c 'sort_by(.version) | reverse' versions.json > versions.json.tmp && mv versions.json.tmp versions.json
    - git add versions.json; git commit -m "update versions.json"
    - git show main:docs-compiler/templates/index.html > index.html
    - if git diff --name-only | grep --quiet index.html; then git add index.html; git commit -m "update index.html"; fi
    - git checkout main &>/dev/null
    - git push origin docs

bb-docs:
  extends:
    - .generic-runner-tags
    - .util-image
  stage: dry-run
  except:
    - schedules
  artifacts:
    when: always
    expire_in: 2 days
    paths:
      - docs/
      - site/
  script:
    - poetry run bb-docs-compiler

test:
  extends:
    - .generic-runner-tags
    - .util-image
  stage: test
  except:
    - schedules
  dependencies:
    - bb-docs
  script:
    - python3 -m http.server --directory site &>/dev/null &
    - |
      counter=10
      while [ $(curl -LI http://localhost:8000 -o /dev/null -w '%{http_code}\n' -s) -ne 200 ]
      do
        if [ $counter -eq 0 ]
        then
          echo "Timed out waiting for "localhost:8000" to be ready"
          exit 1
        fi
        counter=$(($counter - 1))
        echo "[$((10 - $counter))/10] Waiting for 'localhost:8000' to be ready"
        sleep 5
      done
    - PLAYWRIGHT_BROWSERS_PATH="/ms-playwright" npm test
    - kill %1
  artifacts:
    when: always
    expire_in: 2 weeks
    paths:
      - test-results/
