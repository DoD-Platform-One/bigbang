{{- $name := "restrict-sysctls" }}
{{- if and .Values.enabled (dig $name "enabled" false .Values.policies) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ $name }}
  annotations:
    policies.kyverno.io/title: Restrict Sysctls
    policies.kyverno.io/category: Pod Security Standards (Baseline)
    policies.kyverno.io/severity: {{ default "high" (dig $name "severity" nil .Values.policies) }}
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Sysctl can disable security mechanisms or affect all containers on a
      host, and should be restricted to an allowed "safe" subset. A
      sysctl is considered safe if it is namespaced and is isolated from other
      Pods and processes on the same Node.  This policy ensures that all sysctls are
      in the allowed list.
  labels: {{- include "kyverno-policies.labels" . | nindent 4 }}
spec:
  {{- include "kyverno-policies.webhookTimeoutSeconds" (merge (dict "name" $name) .) | indent 2 }}
  validationFailureAction: {{ default (dig $name "validationFailureAction" nil .Values.policies) .Values.validationFailureAction }}
  rules:
  - name: sysctls
    {{- include "kyverno-policies.exclude" (merge (dict "name" $name) .) | indent 4 }}
    {{- include "kyverno-policies.match" (merge (dict "name" $name "kinds" (list "Pod")) .) | nindent 4 }}
    {{- include "kyverno-policies.precondition.default" . | nindent 4 }}
    validate:
      message: >-
        Sysctl set that is not in the allowed list.  The field spec.securityContext.sysctls
        must only use values from the allowed list
      pattern:
        spec:
          =(securityContext):
            =(sysctls):
              - name: "{{ join " | " (dig $name "parameters" "allow" nil .Values.policies) }}"
                value: "?*"
{{- end -}}
