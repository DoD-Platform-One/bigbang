{{- $enableFlag := .Values.addons.metricsServer.enabled | toString }}
{{- $existingMetricsApi := (.Capabilities.APIVersions.Has "metrics.k8s.io/v1beta1") }}
{{- $existingMetricsHelmRelease := (lookup "helm.toolkit.fluxcd.io/v2" "HelmRelease" "bigbang" "metrics-server") }}
{{- if or ( eq $enableFlag "true") (and (eq $enableFlag "auto") (or (not $existingMetricsApi) $existingMetricsHelmRelease)) }}
{{- include "values-secret" (dict "root" $ "package" .Values.addons.metricsServer "name" "metrics" "defaults" (include "bigbang.defaults.metrics-server" .)) }}
{{- end }}

{{- define "bigbang.defaults.metrics-server" -}}
{{- $istioEnabled := eq (include "istioEnabled" .) "true" }}
# hostname is deprecated and replaced with domain. But if hostname exists then use it.
{{- $domainName := default .Values.domain .Values.hostname }}

upstream:
  domain: {{ $domainName }}

  {{- if (eq (include "istioEnabled" .) "true") }}
  podAnnotations:
    {{ include "istioAnnotation" . }}
  {{- end }}

  nameOverride: "metrics-server"
  fullnameOverride: "metrics-server"

  serviceMonitor:
    enabled: {{ .Values.monitoring.enabled }}
    dashboards:
      namespace: monitoring

  metrics:
    enabled: {{ .Values.monitoring.enabled }}

istio:
  enabled: {{ $istioEnabled }}
  hardened:
    enabled: {{ or (dig "istio" "hardened" "enabled" false .Values.addons.metricsServer.values) (dig "hardened" "enabled" false .Values.istiod.values) }}
  injection: {{ ternary "enabled" "disabled" $istioEnabled }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  istioNamespaceSelector:
  {{ include "istioNamespaceSelector" . | nindent 4 }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}

{{- end }}
