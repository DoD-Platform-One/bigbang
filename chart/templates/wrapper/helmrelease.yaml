{{- /* Used for Helm chart deployment of Big Bang wrapper.  One per package. */ -}}
{{- range $pkg, $vals := .Values.packages -}}
{{- if and (dig "enabled" true $vals) (dig "wrapper" "enabled" false $vals) -}}
{{- $pkg = include "resourceName" $pkg -}}
{{- $fluxSettings := merge (dig "flux" dict $vals) $.Values.flux -}}
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: {{ $pkg }}-wrapper
  namespace: {{ dig "namespace" "name" $pkg $vals }}
  labels:
    app.kubernetes.io/name: {{ $pkg }}-wrapper
    {{- include "commonLabels" $ | nindent 4 }}
  annotations:
    {{- $defaults := ($.Files.Get (printf "defaults/%s.yaml" $pkg) | fromYaml) -}}
    {{- $overlays := dict "bigbang" $.Values "package" $vals -}}
    {{- $merged := merge $overlays $defaults }}
    {{- if (omit $merged.package "git" "helmRepo" "flux" "postRenderers" "dependsOn") }}
    checksum/bigbang-values: {{ (toJson (omit $merged.package "git" "helmRepo" "flux" "postRenderers" "dependsOn")) | sha256sum }}
    {{- end }}
spec:
  releaseName: {{ $pkg }}-wrapper
  chart:
    spec:
      {{- if (eq $.Values.wrapper.sourceType "git") }}
      chart: {{ default "chart" $.Values.wrapper.git.path }}
      sourceRef:
        kind: GitRepository
        name: {{ $.Release.Name }}-wrapper
        namespace: {{ $.Release.Namespace }}
      {{- else }}
      chart: {{ $.Values.wrapper.helmRepo.chartName }}
      version: {{ $.Values.wrapper.helmRepo.tag }}
      sourceRef:
        kind: HelmRepository
        name: {{ $.Values.wrapper.helmRepo.repoName }}
        namespace: {{ $.Release.Namespace }}
      {{- end }}
      interval: {{ default "5m" $fluxSettings.interval }}
      reconcileStrategy: Revision
  {{- toYaml $fluxSettings | nindent 2 }}
  valuesFrom:
    - name: {{ $pkg }}-wrapper-values
      kind: Secret

  {{- /* Always wait on policy enforcement */ -}}
  {{- $gatekeeperDep := $.Values.gatekeeper.enabled -}}
  {{- $kyvernoDep := $.Values.kyvernoPolicies.enabled -}}
  {{- /* Wait on istio operator if creating a Virtual Service */ -}}
  {{- $istioOpDep := and $.Values.istio.enabled (dig "istio" "hosts" false $vals) -}}
  {{- /* Wait on monitoring if dashboard or metrics are enabled */ -}}
  {{- $monitoringDep := $.Values.monitoring.enabled -}}
  {{- if or $gatekeeperDep $istioOpDep $kyvernoDep $monitoringDep }}
  dependsOn:
    {{- if $gatekeeperDep }}
    - name: gatekeeper
      namespace: {{ $.Release.Namespace }}
    {{- end }}
    {{- if $kyvernoDep }}
    - name: kyverno-policies
      namespace: {{ $.Release.Namespace }}
    {{- end }}
    {{- if $istioOpDep }}
    - name: istio-operator
      namespace: {{ $.Release.Namespace }}
    {{- end }}
    {{- if $monitoringDep }}
    - name: monitoring
      namespace: {{ $.Release.Namespace }}
    {{- end -}}
  {{- end }}
---
{{ end -}}
{{- end -}}