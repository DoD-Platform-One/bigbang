{{- $pkg := "harbor" }}

{{- /* Create secret */ -}}
{{- if (get .Values.addons $pkg).enabled }}
{{- include "values-secret" (dict "root" $ "package" (get .Values.addons $pkg) "name" $pkg "defaults" (include (printf "bigbang.defaults.%s" $pkg) .)) }}
{{- end }}

{{- define "bigbang.defaults.harbor" -}}
{{- $istioEnabled := eq (include "istioEnabled" .) "true" -}}

imagePullSecrets:
- name: private-registry
imagePullPolicy: {{ .Values.imagePullPolicy }}

externalURL: https://harbor.{{ .Values.domain }}

domain: {{ .Values.domain }}

istio:
  enabled: {{ $istioEnabled }}
  hardened:
    enabled: {{ or
      (dig "istio" "hardened" "enabled" false .Values.addons.harbor.values)
      (dig "hardened" "enabled" false .Values.istio.values)
    }}
  injection: {{ dig "istio" "injection" "enabled" .Values.addons.harbor }}
  harbor:
    gateways:
    - {{ include "istioGatewayNamespace" . }}/{{ default (include "istioPublicGateway" .) .Values.addons.harbor.ingress.gateway }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}
  ingressLabels:
    {{- $gateway := default "public" .Values.addons.harbor.ingress.gateway }}
    {{- $default := dict "app" (dig "gateways" $gateway "ingressGateway" nil .Values.istio) "istio" nil }}
    {{- toYaml (dig "values" "gateways" $gateway "selector" $default .Values.istio) | nindent 4 }}
  istioNamespaceSelector:
    {{ include "istioNamespaceSelector" . | nindent 4 }}


monitoring:
  enabled: {{ .Values.monitoring.enabled }}

serviceMonitor:
  enabled: {{ .Values.monitoring.enabled }}
  # conditional passes only if all conditionals are true:
  # - istio: enabled
  # - mTLS: SCRICT
  {{- if and $istioEnabled (eq (dig "istio" "mtls" "mode" "STRICT" .Values.tempo.values) "STRICT") }}
  scheme: https
  tlsConfig:
    caFile: /etc/prom-certs/root-cert.pem
    certFile: /etc/prom-certs/cert-chain.pem
    keyFile: /etc/prom-certs/key.pem
    insecureSkipVerify: true  # Prometheus does not support Istio security naming, thus skip verifying target pod certificate
  {{- end }}

openshift: {{ .Values.openshift }}

{{- end }}
