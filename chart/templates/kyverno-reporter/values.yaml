{{- $pkg := "kyvernoReporter" }}

{{- if (get .Values $pkg).enabled }}
{{- include "values-secret" (dict "root" $ "package" (get .Values $pkg) "name" ($pkg | kebabcase) "defaults" (include (printf "bigbang.defaults.%s" $pkg | kebabcase) .)) }}
{{- end }}

{{- define "bigbang.defaults.kyverno-reporter" -}}
{{- $domainName := default .Values.domain .Values.hostname }}
{{- $istioEnabled := eq (include "istioEnabled" .) "true" }}
domain: {{ $domainName }}

global:
  fullnameOverride: kyverno-reporter

{{- if $istioEnabled }}
istio:
  enabled: true
  kyvernoReporter:
    gateways:
      - {{ include "getGatewayName" (dict "gateway" .Values.kyvernoReporter.ingress.gateway "root" .)}}
podAnnotations:
  {{ include "istioAnnotation" . }}
{{- end }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  istioNamespaceSelector:
  {{ include "istioNamespaceSelector" . | nindent 4 }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}

openshift: {{ .Values.openshift }}

upstream:
  image:
    pullPolicy: {{ .Values.imagePullPolicy }}
  imagePullSecrets:
  - name: private-registry
  ui:
    enabled: true
    image:
      pullPolicy: {{ .Values.imagePullPolicy }}
    imagePullSecrets:
    - name: private-registry
    {{- if $istioEnabled }}
    podAnnotations:
      {{ include "istioAnnotation" . }}
    {{- end }}
  
  plugin:
    kyverno:
      enabled: true
      image:
        pullPolicy: {{ .Values.imagePullPolicy }}
      imagePullSecrets:
      - name: private-registry
      {{- if $istioEnabled }}
      podAnnotations:
        {{ include "istioAnnotation" . }}
      {{- end }}


  # monitoring contains configurations related to monitoring
  monitoring:
    # -- Enables the Prometheus Operator integration
    enabled: {{ .Values.monitoring.enabled }}
    grafana:
      dashboards:
        enabled: {{ or .Values.monitoring.enabled .Values.grafana.enabled }}
        namespace: monitoring
{{- end -}}
