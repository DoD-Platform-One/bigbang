{{- $pkg := "kyvernoReporter" }}

{{- if (get .Values $pkg).enabled }}
{{- include "values-secret" (dict "root" $ "package" (get .Values $pkg) "name" ($pkg | kebabcase) "defaults" (include (printf "bigbang.defaults.%s" $pkg | kebabcase) .)) }}
{{- end }}

{{- define "bigbang.defaults.kyverno-reporter" -}}
{{- $domainName := default .Values.domain .Values.hostname }}
{{- $istioEnabled := eq (include "istioEnabled" .) "true" }}
domain: {{ $domainName }}

global:
  fullnameOverride: kyverno-reporter

image:
  pullPolicy: {{ .Values.imagePullPolicy }}
imagePullSecrets:
- name: private-registry

{{- if $istioEnabled }}
istio:
  enabled: true
  kyvernoReporter:
    gateways:
      - {{ include "getGatewayName" (dict "gateway" .Values.kyvernoReporter.ingress.gateway "root" .)}}
podAnnotations:
  {{ include "istioAnnotation" . }}
{{- end }}


ui:
  enabled: true
  image:
    pullPolicy: {{ .Values.imagePullPolicy }}
  imagePullSecrets:
  - name: private-registry
  {{- if $istioEnabled }}
  podAnnotations:
    {{ include "istioAnnotation" . }}
  {{- end }}

  # monitoring contains configurations related to monitoring
monitoring:
  # -- Enables the Prometheus Operator integration
  enabled: true
  grafana:
    dashboards:
      enabled: true
      namespace: monitoring

openshift: {{ .Values.openshift }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  istioNamespaceSelector:
  {{ include "istioNamespaceSelector" . | nindent 4 }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}

{{- end -}}
