{{- if or .Values.kyverno.enabled .Values.kyvernoPolicies.enabled .Values.kyvernoReporter.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.kyverno "name" "kyverno" "defaults" (include "bigbang.defaults.kyverno" .)) }}
{{- end }}

{{- define "bigbang.defaults.kyverno" -}}
{{- $istioEnabled := eq (include "istioEnabled" .) "true" }}

istio:
  enabled: {{ $istioEnabled }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}

openshift: {{ .Values.openshift }}

upstream:

  fullnameOverride: kyverno-kyverno

  replicaCount: 3

  image:
    pullSecrets:
    - name: private-registry
    pullPolicy: {{ .Values.imagePullPolicy }}

  grafana:
    enabled: {{ .Values.monitoring.enabled }}
    namespace: monitoring

  admissionController:
    serviceMonitor:
      enabled: {{ .Values.monitoring.enabled }}

  backgroundController:
    serviceMonitor:
      enabled: {{ .Values.monitoring.enabled }}

  cleanupController:
    serviceMonitor:
      enabled: {{ .Values.monitoring.enabled }}

  reportsController:
    serviceMonitor:
      enabled: {{ .Values.monitoring.enabled }}


{{- end -}}
