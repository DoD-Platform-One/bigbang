{{- if or .Values.loki.enabled .Values.promtail.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.loki "name" "loki" "defaults" (include "bigbang.defaults.loki" .)) }}
{{- end }}

{{- define "bigbang.defaults.loki" -}}
hostname: {{ .Values.hostname }}

openshift: {{ .Values.openshift }}

istio:
  enabled: {{ .Values.istio.enabled }}

imagePullSecrets:
  - name: private-registry

image:
  pullPolicy: {{ .Values.imagePullPolicy }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}

monitoring:
  enabled: {{ .Values.monitoring.enabled }}
{{- if (eq .Values.loki.strategy "scalable") }}
  serviceMonitor:
    enabled: {{ .Values.monitoring.enabled }}
{{- end }}

istio:
  enabled: {{ .Values.istio.enabled }} 

loki:
  storage:
    bucketNames:
      {{- toYaml .Values.loki.objectStorage.bucketNames | nindent 6 }}
    s3:
      endpoint: {{ .Values.loki.objectStorage.endpoint }}
      region: {{ .Values.loki.objectStorage.region }}
      accessKeyId: {{ .Values.loki.objectStorage.accessKey }}
      secretAccessKey: {{ .Values.loki.objectStorage.accessSecret }}

{{- with .Values.loki.objectStorage }}
{{- if and (eq $.Values.loki.strategy "scalable") (not (and .endpoint .region)) }}
minio:
  enabled: true
{{- end }}
{{- end }}

{{- if .Values.istio.enabled }}
podAnnotations:
  {{ include "istioAnnotation" . }}
{{- end }}

monolith:
  enabled: {{ eq .Values.loki.strategy "monolith" }}
  serviceMonitor:
    enabled: {{ .Values.monitoring.enabled }}
{{- if (eq .Values.loki.strategy "monolith") }}
read:
  disabled: true
write:
  disabled: true
{{- end }}

{{- end -}}
