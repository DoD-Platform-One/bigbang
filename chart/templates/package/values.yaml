{{- /* Used for creating values for the package's Helm chart */ -}}
{{- range $pkg, $vals := .Values.packages -}}
{{- if (dig "enabled" true $vals) -}}
{{- $pkg = include "resourceName" $pkg -}}
{{- $defaults := $.Files.Get (printf "defaults/%s.yaml" $pkg) -}}
{{- if $defaults -}}
{{- $vals := mergeOverwrite $vals ($defaults | fromYaml).package -}}
{{- end -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $pkg }}-values
  namespace:  {{ if dig "helmRelease" "namespace" nil (index $.Values.packages $pkg) }}
                {{ dig "helmRelease" "namespace" "" (index $.Values.packages $pkg) }}
              {{ else }}
                {{ default (dig "namespace" "name" $pkg $vals) "" }}
              {{ end }}
  labels:
    {{- include "commonLabels" $ | nindent 4 }}
type: Opaque
stringData:
  {{- if (not $vals.kustomize) }}

  {{- if or ($vals.values) (dig "passBigBangValues" true $vals) }}
  values.yaml: |-
    {{ if (dig "passBigBangValues" true $vals) -}}
    bigbang:
      {{- include "values-bigbang" $.Values | nindent 6 }}
    {{- end }}
    {{- if $vals.values -}}
    {{- tpl (toYaml $vals.values) $ | nindent 4 }}
    {{- end }}
  {{ else }}
  values.yaml: "{}"
  {{- end }}

  {{- else }}
  {{- if or ($vals.values) (dig "passBigBangValues" true $vals) }}
  {{- if (dig "passBigBangValues" true $vals) }}
  bigbang:
    {{- include "values-bigbang" $.Values | nindent 6 }}
  {{- end }}
  {{- if $vals.values -}}
  {{- tpl (toYaml $vals.values) $ | nindent 2 }}
  {{- end }}
  {{- else }}
  {}
  {{- end }}

  {{ end }}
  
---
{{ end -}}
{{- end -}}