{{- /* Create secret */ -}}
{{- if .Values.addons.alloy.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.addons.alloy "name" "alloy" "defaults" (include "bigbang.defaults.alloy" .)) }}
{{- end }}

{{- define "bigbang.defaults.alloy" -}}
{{- $alloyLogsEnabled := (dig "alloyLogs" "enabled" false .Values.addons.alloy) }}

{{- $lokiWriteDestUrl := ternary
    "http://logging-loki.logging.svc.cluster.local:3100/loki/api/v1/push"
    "http://logging-loki-write.logging.svc.cluster.local:3100/loki/api/v1/push"
    (eq .Values.loki.strategy "monolith")
}}

monitoring:
  enabled: {{ .Values.monitoring.enabled }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}

istio:
  enabled: {{ .Values.istio.enabled }}
  hardened:
    enabled: {{ or
      (dig "istio" "hardened" "enabled" false .Values.monitoring.values)
      (dig "istio" "hardened" "enabled" false .Values.addons.authservice.values)
      (dig "hardened" "enabled" false .Values.istio.values)
      (dig "istio" "hardened" "enabled" false .Values.grafana.values)
      (dig "istio" "hardened" "enabled" false .Values.loki.values)
      (dig "istio" "hardened" "enabled" false .Values.eckOperator.values)
      (dig "istio" "hardened" "enabled" false .Values.elasticsearchKibana.values)
      (dig "istio" "hardened" "enabled" false .Values.addons.mimir.values)
      (dig "istio" "hardened" "enabled" false .Values.addons.alloy.values)
    }}

k8s-monitoring:
  {{- range $service := list "alloy-metrics" "alloy-log" }} # Add/Remove Alloy Micro-Services as Alloy Configurations Change
  {{ $service }}:
    serviceMonitor:
      enabled: {{ $.Values.monitoring.enabled }}
      {{- if and (include "istioEnabled" $) (eq (dig "istio" "mtls" "mode" "STRICT" $.Values.addons.alloy.values) "STRICT") }}
      tlsConfig:
        caFile: /etc/prom-certs/root-cert.pem
        certFile: /etc/prom-certs/cert-chain.pem
        keyFile: /etc/prom-certs/key.pem
        insecureSkipVerify: true  # Prometheus does not support Istio security naming, thus skip verifying target pod certificate
      {{- end }}
  {{- end }}

  destinations:
    {{- if and $alloyLogsEnabled .Values.loki.enabled }}
    - name: loki
      type: loki
      url: {{ $lokiWriteDestUrl }}
    {{- end }}
  {{- if and $alloyLogsEnabled .Values.loki.enabled }}
  alloy-logs:
    enabled: true
  podLogs:
    enabled: true
  {{- end }}
{{- end }}