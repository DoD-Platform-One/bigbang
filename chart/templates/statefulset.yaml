apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels.commonLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "common.names.fullname" . }}
  selector:
    matchLabels:
      {{- include "common.labels.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "common.labels.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "confluence.serviceAccountName" . }}
      terminationGracePeriodSeconds: 1
      securityContext:
        # This is intended to ensure that the shared-home volume is group-writeable by the GID used by the Cnfluence container.
        # However, this doesn't appear to work for NFS volumes due to a K8s bug: https://github.com/kubernetes/examples/issues/260
        fsGroup: {{ .Values.confluence.gid }}
      hostAliases:
        {{- include "confluence.additionalHosts" . | nindent 8 }}
      initContainers:
        {{- include "confluence.additionalInitContainers" . | nindent 8 }}
        {{- if .Values.volumes.sharedHome.nfsPermissionFixer.enabled }}
        - name: nfs-permission-fixer
          image: alpine
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0 # make sure we run as root so we get the ability to change the volume permissions
          volumeMounts:
            - name: shared-home
              mountPath: {{ .Values.volumes.sharedHome.nfsPermissionFixer.mountPath | quote }}
              {{- if .Values.volumes.sharedHome.subPath }}
              subPath: {{ .Values.volumes.sharedHome.subPath | quote }}
              {{- end }}
          command: ["sh", "-c", {{ include "sharedHome.permissionFix.command" . | quote }}]
        {{- end }}
      imagePullSecrets:
        {{- if .Values.image.imagePullSecrets }}
        - name: {{ .Values.image.imagePullSecrets }}
        {{- end }}
      containers:
        - name: confluence
          image: {{ include "confluence.image" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            runAsUser: {{ .Values.confluence.gid }}
            runAsGroup: {{ .Values.confluence.gid }}
          ports:
            - name: http
              containerPort: {{ .Values.confluence.ports.http }}
              protocol: TCP
            - name: hazelcast
              containerPort: {{ .Values.confluence.ports.hazelcast }}
              protocol: TCP
            - name: intersvc
              containerPort: {{ .Values.confluence.ports.intersvc }}
              protocol: TCP
            - name: synchrony
              containerPort: {{ .Values.confluence.ports.synchrony }}
              protocol: TCP
          readinessProbe:
            httpGet:
              port: {{ .Values.confluence.ports.http }}
              path: /status
            initialDelaySeconds: {{ .Values.confluence.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.confluence.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.confluence.readinessProbe.failureThreshold }}
          {{- if .Values.confluence.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              port: {{ .Values.confluence.ports.http }}
              path: /status
            initialDelaySeconds: {{ .Values.confluence.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.confluence.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.confluence.livenessProbe.failureThreshold }}
          {{- end }}
          {{- with .Values.confluence.resources.container }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: local-home
              mountPath: {{ .Values.volumes.localHome.mountPath | quote }}
            - name: shared-home
              mountPath: {{ .Values.volumes.sharedHome.mountPath | quote }}
              {{- if .Values.volumes.sharedHome.subPath }}
              subPath: {{ .Values.volumes.sharedHome.subPath | quote }}
              {{- end }}
            {{- with .Values.confluence.additionalVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- include "confluence.additionalLibraries" . | nindent 12 }}
            {{- include "confluence.additionalBundledPlugins" . | nindent 12 }}
          env:
            {{ if .Values.ingress.https }}
            - name: ATL_TOMCAT_SCHEME
              value: "https"
            - name: ATL_TOMCAT_SECURE
              value: "true"
            {{ end }}
            - name: ATL_PRODUCT_HOME_SHARED
              value: {{ .Values.volumes.sharedHome.mountPath | quote }}
            - name: JVM_SUPPORT_RECOMMENDED_ARGS
              valueFrom:
                configMapKeyRef:
                  key: additional_jvm_args
                  name: {{ include "common.names.fullname" . }}-jvm-config
            {{- include "confluence.clusteringEnvVars" . | nindent 12 }}
            {{- include "confluence.databaseEnvVars" . | nindent 12 }}
            {{ with .Values.confluence.license.secretName }}
            - name: ATL_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ . }}
                  key: {{ $.Values.confluence.license.secretKey }}
            {{ end }}
            - name: JVM_MINIMUM_MEMORY
              valueFrom:
                configMapKeyRef:
                  key: min_heap
                  name: {{ include "common.names.fullname" . }}-jvm-config
            - name: JVM_MAXIMUM_MEMORY
              valueFrom:
                configMapKeyRef:
                  key: max_heap
                  name: {{ include "common.names.fullname" . }}-jvm-config
            - name: JVM_RESERVED_CODE_CACHE_SIZE
              valueFrom:
                configMapKeyRef:
                  key: reserved_code_cache
                  name: {{ include "common.names.fullname" . }}-jvm-config
            {{- with .Values.confluence.additionalEnvironmentVariables }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- with .Values.additionalContainers }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{ include "confluence.volumes" . | nindent 8 }}
        {{- with .Values.initcontainervolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

        {{ include "fluentd.config.volume" . | nindent 8 }}
  {{ include "confluence.volumeClaimTemplates" . | nindent 2 }}
