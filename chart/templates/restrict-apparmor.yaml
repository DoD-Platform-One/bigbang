{{- $name := "restrict-apparmor" }}
{{- if and .Values.enabled (dig $name "enabled" false .Values.policies) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ $name }}
  annotations:
    policies.kyverno.io/title: Restrict AppArmor Profile
    policies.kyverno.io/category: Pod Security Standards (Baseline)
    policies.kyverno.io/severity: {{ default "high" (dig $name "severity" nil .Values.policies) }}
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/minversion: 1.3.0
    policies.kyverno.io/description: >-
      On hosts using Debian Linux distros, AppArmor is used as an access control framework.  AppArmor uses
      the 'runtime/default' profile by default.  This policy ensures Pods do not override the AppArmor
      profile with values outside of the allowed list.
  labels: {{- include "kyverno-policies.labels" . | nindent 4 }}
spec:
  {{- include "kyverno-policies.webhookTimeoutSeconds" (merge (dict "name" $name) .) | indent 2 }}
  validationFailureAction: {{ default (dig $name "validationFailureAction" nil .Values.policies) .Values.validationFailureAction }}
  rules:
  - name: app-armor
    {{- include "kyverno-policies.exclude" (merge (dict "name" $name) .) | indent 4 }}
    {{- include "kyverno-policies.match" (merge (dict "name" $name "kinds" (list "Pod")) .) | nindent 4 }}
    {{- include "kyverno-policies.precondition.default" . | nindent 4 }}
    validate:
      message: >-
        The AppArmor profile used is not in the approved list. The annotation
        container.apparmor.security.beta.kubernetes.io must not be defined,
        or must be set to a profile on the approved list.
      pattern:
        metadata:
          =(annotations):
            =(container.apparmor.security.beta.kubernetes.io/*): "{{ join " | " (dig $name "parameters" "allow" nil .Values.policies) }}"
{{- end -}}
