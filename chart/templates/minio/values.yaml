{{- if .Values.addons.minio.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.addons.minio "name" "minio" "defaults" (include "bigbang.defaults.minio" .)) }}
{{- end }}

{{- define "bigbang.defaults.minio" -}}
{{- $istioEnabled := eq (include "istioEnabled" .) "true" }}
# hostname is deprecated and replaced with domain. But if hostname exists then use it.
{{- $domainName := default .Values.domain .Values.hostname }}
hostname: {{ $domainName }}
domain: {{ $domainName }}

istio:
  enabled: {{ $istioEnabled }}
  console:
    gateways:
      - {{ include "getGatewayName" (dict "gateway" .Values.addons.minio.ingress.gateway "root" .)}}
  api:
    gateways:
      - {{ include "getGatewayName" (dict "gateway" .Values.addons.minio.ingress.gateway "root" .)}}
  hardened:
    enabled: {{ or
      (dig "istio" "hardened" "enabled" false .Values.addons.minioOperator.values)
      (dig "istio" "hardened" "enabled" false .Values.addons.minio.values)
      (dig "hardened" "enabled" false .Values.istiod.values)
    }}

{{- if $istioEnabled }}
annotations:
  {{ include "istioAnnotation" . }}
{{- end }}

monitoring:
  enabled: {{ .Values.monitoring.enabled }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}
  ingressLabels:
    {{- include "getGatewaySelector" (dict "pkg" .Values.addons.minio "root" .) | nindent 4 }}
  istioNamespaceSelector:
  {{ include "istioNamespaceSelector" . | nindent 4 }}

podAnnotations:
  sidecar.istio.io/inject: "true"
  traffic.sidecar.istio.io/includeInboundPorts: "*"
  traffic.sidecar.istio.io/excludeInboundPorts: "9443"

tenant:
  image:
    pullPolicy: {{ .Values.imagePullPolicy }}
  imagePullSecret:
    name: private-registry
  metrics:
    enabled: {{ .Values.monitoring.enabled }}
  configSecret:
    accessKey: {{ .Values.addons.minio.accesskey | default "minio" }}
    secretKey: {{ .Values.addons.minio.secretkey | default "minio123" }}  
  {{- if .Values.monitoring.enabled }}
  env:
    - name: MINIO_PROMETHEUS_AUTH_TYPE
      value: "public"
  {{- end }}
{{- end -}}


