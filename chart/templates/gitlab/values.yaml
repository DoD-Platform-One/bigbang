{{- if .Values.addons.gitlab.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.addons.gitlab "name" "gitlab" "defaults" (include "bigbang.defaults.gitlab" .)) }}
{{- end }}
{{- if and (ne .Values.addons.gitlab.objectStorage.iamProfile "") (ne .Values.addons.gitlab.objectStorage.accessKey "") }}{{- fail "Must choose to use an IAM profile OR an AWS accessKey/accessSecret at .Values.addons.gitlab.objectStorage" }}{{- end }}
{{- define "bigbang.defaults.gitlab" -}}
# hostname is deprecated and replaced with domain. But if hostname exists then use it.
{{- $domainName := default .Values.domain .Values.hostname }}
hostname: {{ $domainName }}
domain: {{ $domainName }}

# Define variables to help with conditionals later
{{- $istioInjection := (and (eq (dig "istio" "injection" "enabled" .Values.addons.gitlab) "enabled") .Values.istio.enabled) }}
{{- $iamProfile := (and (ne .Values.addons.gitlab.objectStorage.iamProfile "") .Values.addons.gitlab.objectStorage.endpoint) }}

openshift: {{ .Values.openshift }}

istio:
  enabled: {{ .Values.istio.enabled }}
  injection: {{ dig "istio" "injection" "enabled" .Values.addons.gitlab }}
  gitlab:
    gateways:
    - istio-system/{{ default "public" .Values.addons.gitlab.ingress.gateway }}
  registry:
    gateways:
    - istio-system/{{ default "public" .Values.addons.gitlab.ingress.gateway }}

monitoring:
  enabled: {{ .Values.monitoring.enabled }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  ingressLabels:
    {{- $gateway := default "public" .Values.addons.gitlab.ingress.gateway }}
    {{- $default := dict "app" (dig "gateways" $gateway "ingressGateway" nil .Values.istio) "istio" nil }}
    {{- toYaml (dig "values" "gateways" $gateway "selector" $default .Values.istio) | nindent 4 }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}

{{- if and (or $istioInjection .Values.monitoring.enabled) (dig "redis" "install" true .Values.addons.gitlab.values) }}
redis:
  {{- if .Values.monitoring.enabled }}
  metrics:
    serviceMonitor:
      enabled: true
      namespace: gitlab
  {{- end }}
  {{- if $istioInjection }}
  master:
    podAnnotations:
      {{ include "istioAnnotation" . }}
  slave:
    podAnnotations:
      {{ include "istioAnnotation" . }}
  {{- end }}
{{- end }}

{{- if or .Values.addons.gitlab.database.host $istioInjection }}
postgresql:
  {{- if .Values.addons.gitlab.database.host }}
  install: false
  {{- end }}
  {{- if $istioInjection }}
  master:
    podAnnotations:
      {{ include "istioAnnotation" . }}
  slave:
    podAnnotations:
      {{ include "istioAnnotation" . }}
  {{- end }}
{{- end }}

{{- if or .Values.addons.gitlab.objectStorage.endpoint $istioInjection }}
registry:
  {{- if .Values.addons.gitlab.objectStorage.endpoint }}
  storage:
    secret: gitlab-object-storage
    key: registry
  {{- end }}
  {{- if or $iamProfile $istioInjection }}
  annotations: 
    {{- if $iamProfile }}
    iam.amazonaws.com/role: {{ .Values.addons.gitlab.objectStorage.iamProfile }}
    {{- end }}
    {{- if $istioInjection }}
    {{ include "istioAnnotation" . }}
    {{- end }}
  {{- end }}
{{- end }}

gitlab:
  {{- if or .Values.addons.gitlab.objectStorage.endpoint $istioInjection }}
  toolbox:
    {{- if .Values.addons.gitlab.objectStorage.endpoint }}
    backups:
      objectStorage:
        config:
          secret: gitlab-object-storage
          key: backups
    {{- end }}
    {{- if or $iamProfile $istioInjection }}
    annotations:
      {{- if $iamProfile }}
      iam.amazonaws.com/role: {{ .Values.addons.gitlab.objectStorage.iamProfile }}
      {{- end }}
      {{- if $istioInjection }}
      {{ include "istioAnnotation" . }}
      {{- end }}
    {{- end }}
  {{- end }}
  gitlab-exporter:
    enabled: {{ .Values.monitoring.enabled }}
    {{- if $istioInjection }}
    metrics:
      annotations:
        {{ include "istioAnnotation" . }}
    {{- end }}
  {{- if or $iamProfile $istioInjection }}
  webservice:
    annotations: 
      {{- if $iamProfile }}
      iam.amazonaws.com/role: {{ .Values.addons.gitlab.objectStorage.iamProfile }}
      {{- end }}
      {{- if $istioInjection }}
      {{ include "istioAnnotation" . }}
      {{- end }}
  sidekiq:
    annotations: 
      {{- if $iamProfile }}
      iam.amazonaws.com/role: {{ .Values.addons.gitlab.objectStorage.iamProfile }}
      {{- end }}
      {{- if $istioInjection }}
      {{ include "istioAnnotation" . }}
      {{- end }}
  {{- end }}
{{- if $istioInjection }}
  migrations:
    annotations:
      {{ include "istioAnnotation" . }}
  gitaly:
    annotations:
      {{ include "istioAnnotation" . }}
  gitlab-shell:
    annotations:
      {{ include "istioAnnotation" . }}
  praefect:
    annotations:
      {{ include "istioAnnotation" . }}
  gitlab-grafana:
    annotations:
      {{ include "istioAnnotation" . }}
shared-secrets:
  annotations:
    {{ include "istioAnnotation" . }}
minio:
  podAnnotations:
    {{ include "istioAnnotation" . }}
{{- end }}

global:
  # added to help with Gitlab sub-chart configuration
  image:
    pullPolicy: {{ .Values.imagePullPolicy }}
    
  istio:
    enabled: {{ .Values.istio.enabled }}
    injection: {{ dig "istio" "injection" "enabled" .Values.addons.gitlab }}

  hosts:
    domain: {{ $domainName }}

    gitlab:
      name: {{ .Values.addons.gitlab.hostnames.gitlab }}.{{ $domainName }}

    registry:
      name: {{ .Values.addons.gitlab.hostnames.registry }}.{{ $domainName }}

  {{- if .Values.addons.gitlab.objectStorage.endpoint }}
  minio:
    enabled: false
  {{- end }}

  {{- if .Values.addons.gitlab.database.host }}
  psql:
    host: {{ .Values.addons.gitlab.database.host }}
    port: {{ .Values.addons.gitlab.database.port }}
    username: {{ .Values.addons.gitlab.database.username }}
    database: {{ .Values.addons.gitlab.database.database }}
    password:
      secret: gitlab-database
      key: PGPASSWORD
  {{- end }}

  {{- if .Values.addons.gitlab.objectStorage.endpoint }}
  registry:
    {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
    bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-registry
    {{- else }}
    bucket: gitlab-registry
    {{- end }}
  {{- end }}

  {{- if or .Values.addons.gitlab.sso.enabled .Values.addons.gitlab.objectStorage.endpoint }}
  appConfig:
    {{- end }}

    {{- if .Values.addons.gitlab.sso.enabled }}
    omniauth:
      enabled: true
      {{- $global := .Values.addons.gitlab.values.global | default dict }}
      {{- $appConfig := $global.appConfig | default dict }}
      {{- $omniauth := $appConfig.omniauth | default dict }}
      {{- if hasKey $omniauth "allowSingleSignOn" }}
      allowSingleSignOn: {{ .Values.addons.gitlab.values.global.appConfig.omniauth.allowSingleSignOn }}
      {{- else }}
      allowSingleSignOn: ['openid_connect']
      {{- end }}
      {{- if hasKey $omniauth "blockAutoCreatedUsers" }}
      blockAutoCreatedUsers: {{ .Values.addons.gitlab.values.global.appConfig.omniauth.blockAutoCreatedUsers }}
      {{- else }}
      blockAutoCreatedUsers: false
      {{- end }}

      providers:
        - secret: gitlab-sso-provider
          key: gitlab-sso.json
    {{- end }}

    {{- if .Values.addons.gitlab.objectStorage.endpoint }}
    lfs:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-lfs
      {{- else }}
      bucket: gitlab-lfs
      {{- end }}

      connection:
        secret: gitlab-object-storage
        key: rails

    artifacts:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-artifacts
      {{- else }}
      bucket: gitlab-artifacts
      {{- end }}
      connection:
        secret: gitlab-object-storage
        key: rails

    uploads:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-uploads
      {{- else }}
      bucket: gitlab-uploads
      {{- end }}
      connection:
        secret: gitlab-object-storage
        key: rails

    packages:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-packages
      {{- else }}
      bucket: gitlab-packages
      {{- end }}

      connection:
        secret: gitlab-object-storage
        key: rails

    externalDiffs:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-mr-diffs
      {{- else }}
      bucket: gitlab-mr-diffs
      {{- end }}
      connection:
        secret: gitlab-object-storage
        key: rails

    terraformState:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-terraform-state
      {{- else }}
      bucket: gitlab-terraform-state
      {{- end }}
      connection:
        secret: gitlab-object-storage
        key: rails

    dependencyProxy:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-dependency-proxy
      {{- else }}
      bucket: gitlab-dependency-proxy
      {{- end }}
      connection:
        secret: gitlab-object-storage
        key: rails

    pseudonymizer:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-pseudo
      {{- else }}
      bucket: gitlab-pseudo
      {{- end }}
      connection:
        secret: gitlab-object-storage
        key: rails

    backups:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-backup
      {{- else }}
      bucket: gitlab-backup
      {{- end }}
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      tmpBucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-backup-tmp
      {{- else }}
      tmpBucket: gitlab-backup-tmp
    {{- end }}
  {{- end }}

{{- if ne .Values.addons.gitlab.objectStorage.iamProfile "" }}
use_iam_profile: true
{{- end }}

{{- end -}}
