{{- if .Values.addons.gitlab.enabled }}
{{- include "values-secret" (dict "root" $ "package" (dict "values" (fromYaml (include "bigbang.overlays.gitlab" .))) "name" "gitlab" "defaults" (include "bigbang.defaults.gitlab" .)) }}
{{- end }}
{{- if and (ne .Values.addons.gitlab.objectStorage.iamProfile "") (ne .Values.addons.gitlab.objectStorage.accessKey "") }}{{- fail "Must choose to use an IAM profile OR an AWS accessKey/accessSecret at .Values.addons.gitlab.objectStorage" }}{{- end }}
{{- define "bigbang.defaults.gitlab" -}}
# hostname is deprecated and replaced with domain. But if hostname exists then use it.
{{- $domainName := default .Values.domain .Values.hostname }}
hostname: {{ $domainName }}
domain: {{ $domainName }}

# Define variables to help with conditionals later
{{- $istioInjection := (and (eq (dig "istio" "injection" "enabled" .Values.addons.gitlab) "enabled") .Values.istio.enabled) }}
{{- $extObjStorageIsConfigured := (or .Values.addons.gitlab.objectStorage.region .Values.addons.gitlab.objectStorage.endpoint) }}
{{- $iamProfile := (and (ne .Values.addons.gitlab.objectStorage.iamProfile "") $extObjStorageIsConfigured) }}

openshift: {{ .Values.openshift }}

istio:
  enabled: {{ .Values.istio.enabled }}
  injection: {{ dig "istio" "injection" "enabled" .Values.addons.gitlab }}
  gitlab:
    gateways:
    - istio-system/{{ default "public" .Values.addons.gitlab.ingress.gateway }}
  registry:
    gateways:
    - istio-system/{{ default "public" .Values.addons.gitlab.ingress.gateway }}

monitoring:
  enabled: {{ .Values.monitoring.enabled }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  ingressLabels:
    {{- $gateway := default "public" .Values.addons.gitlab.ingress.gateway }}
    {{- $default := dict "app" (dig "gateways" $gateway "ingressGateway" nil .Values.istio) "istio" nil }}
    {{- toYaml (dig "values" "gateways" $gateway "selector" $default .Values.istio) | nindent 4 }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}

{{- if and (or $istioInjection .Values.monitoring.enabled) (dig "redis" "install" true .Values.addons.gitlab.values) }}
redis:
  {{- if .Values.monitoring.enabled }}
  metrics:
    serviceMonitor:
      enabled: true
      namespace: gitlab
  {{- end }}
  {{- if $istioInjection }}
  master:
    podAnnotations:
      {{ include "istioAnnotation" . }}
  slave:
    podAnnotations:
      {{ include "istioAnnotation" . }}
  {{- end }}
{{- end }}

{{- if or .Values.addons.gitlab.database.host $istioInjection }}
postgresql:
  {{- if .Values.addons.gitlab.database.host }}
  install: false
  {{- end }}
  {{- if $istioInjection }}
  master:
    podAnnotations:
      {{ include "istioAnnotation" . }}
  slave:
    podAnnotations:
      {{ include "istioAnnotation" . }}
  {{- end }}
{{- end }}

{{- if or $extObjStorageIsConfigured $istioInjection }}
registry:
  {{- if $extObjStorageIsConfigured }}
  storage:
    secret: gitlab-object-storage
    key: registry
  {{- end }}
  {{- if or $iamProfile $istioInjection }}
  annotations: 
    {{- if $iamProfile }}
    iam.amazonaws.com/role: {{ .Values.addons.gitlab.objectStorage.iamProfile }}
    {{- end }}
    {{- if $istioInjection }}
    {{ include "istioAnnotation" . }}
    {{- end }}
  {{- end }}
  {{- if and (eq (dig "istio" "mtls" "mode" "STRICT" .Values.addons.gitlab.values) "STRICT") $istioInjection }}
  metrics:
    serviceMonitor:
      endpointConfig:
        scheme: https
        tlsConfig:
          caFile: /etc/prom-certs/root-cert.pem
          certFile: /etc/prom-certs/cert-chain.pem
          keyFile: /etc/prom-certs/key.pem
          insecureSkipVerify: true  # Prometheus does not support Istio security naming, thus skip verifying target pod certificate
  {{- end }}
{{- end }}

gitlab:
  {{- if or $extObjStorageIsConfigured $istioInjection }}
  toolbox:
    {{- if $extObjStorageIsConfigured }}
    backups:
      objectStorage:
        config:
          secret: gitlab-object-storage
          key: backups
    {{- end }}
    {{- if or $iamProfile $istioInjection }}
    annotations:
      {{- if $iamProfile }}
      iam.amazonaws.com/role: {{ .Values.addons.gitlab.objectStorage.iamProfile }}
      {{- end }}
      {{- if $istioInjection }}
      {{ include "istioAnnotation" . }}
      {{- end }}
    {{- end }}
  {{- end }}
  gitlab-exporter:
    enabled: {{ .Values.monitoring.enabled }}
    {{- if $istioInjection }}
    metrics:
      annotations:
        {{ include "istioAnnotation" . }}
    {{- end }}
    {{- if and (eq (dig "istio" "mtls" "mode" "STRICT" .Values.addons.gitlab.values) "STRICT") $istioInjection }}
    metrics:
      serviceMonitor:
        endpointConfig:
          scheme: https
          tlsConfig:
            caFile: /etc/prom-certs/root-cert.pem
            certFile: /etc/prom-certs/cert-chain.pem
            keyFile: /etc/prom-certs/key.pem
            insecureSkipVerify: true  # Prometheus does not support Istio security naming, thus skip verifying target pod certificate
    {{- end }}

  {{- if or $iamProfile $istioInjection }}
  webservice:
  {{- if and (eq (dig "istio" "mtls" "mode" "STRICT" .Values.addons.gitlab.values) "STRICT") $istioInjection }}
    metrics:
      serviceMonitor:
        endpointConfig:
          scheme: https
          tlsConfig:
            caFile: /etc/prom-certs/root-cert.pem
            certFile: /etc/prom-certs/cert-chain.pem
            keyFile: /etc/prom-certs/key.pem
            insecureSkipVerify: true  # Prometheus does not support Istio security naming, thus skip verifying target pod certificate
    workhorse:
      metrics:
        serviceMonitor:
          endpointConfig:
            scheme: https
            tlsConfig:
              caFile: /etc/prom-certs/root-cert.pem
              certFile: /etc/prom-certs/cert-chain.pem
              keyFile: /etc/prom-certs/key.pem
              insecureSkipVerify: true  # Prometheus does not support Istio security naming, thus skip verifying target pod certificate
  {{- end }}
  {{- if or $iamProfile $istioInjection }}
    annotations: 
      {{- if $iamProfile }}
      iam.amazonaws.com/role: {{ .Values.addons.gitlab.objectStorage.iamProfile }}
      {{- end }}
      {{- if $istioInjection }}
      {{ include "istioAnnotation" . }}
      {{- end }}
  sidekiq:
    annotations: 
      {{- if $iamProfile }}
      iam.amazonaws.com/role: {{ .Values.addons.gitlab.objectStorage.iamProfile }}
      {{- end }}
      {{- if $istioInjection }}
      {{ include "istioAnnotation" . }}
      {{- end }}
  {{- end }}
  {{- end }}
{{- if $istioInjection }}
  migrations:
    annotations:
      {{ include "istioAnnotation" . }}
  gitaly:
    annotations:
      {{ include "istioAnnotation" . }}
    {{- if and (eq (dig "istio" "mtls" "mode" "STRICT" .Values.addons.gitlab.values) "STRICT") $istioInjection }}
    metrics:
      serviceMonitor:
        endpointConfig:
          scheme: https
          tlsConfig:
            caFile: /etc/prom-certs/root-cert.pem
            certFile: /etc/prom-certs/cert-chain.pem
            keyFile: /etc/prom-certs/key.pem
            insecureSkipVerify: true  # Prometheus does not support Istio security naming, thus skip verifying target pod certificate
    {{- end }}
  gitlab-shell:
    annotations:
      {{ include "istioAnnotation" . }}
    {{- if and (eq (dig "istio" "mtls" "mode" "STRICT" .Values.addons.gitlab.values) "STRICT") $istioInjection }}
    metrics:
      serviceMonitor:
        endpointConfig:
          scheme: https
          tlsConfig:
            caFile: /etc/prom-certs/root-cert.pem
            certFile: /etc/prom-certs/cert-chain.pem
            keyFile: /etc/prom-certs/key.pem
            insecureSkipVerify: true  # Prometheus does not support Istio security naming, thus skip verifying target pod certificate
    {{- end }}

  praefect:
    annotations:
      {{ include "istioAnnotation" . }}
  gitlab-grafana:
    annotations:
      {{ include "istioAnnotation" . }}
shared-secrets:
  annotations:
    {{ include "istioAnnotation" . }}
minio:
  podAnnotations:
    {{ include "istioAnnotation" . }}
{{- end }}

global:
  {{- if and .Values.addons.gitlab.sso.enabled (or (dig "certificateAuthority" "secretName" false .Values.sso) .Values.sso.secretName) }}
  certificates:
    customCAs:
      {{- if and .Values.addons.gitlab.sso.enabled (or .Values.sso.certificate_authority (dig "certificateAuthority" "cert" false .Values.sso)) }}
      - secret: {{ default (dig "certificateAuthority" "secretName" "" .Values.sso) .Values.sso.secretName }}
      {{- end }}
      - secret: ca-certs-australian-defence-organisation-cross-cert-chain
      - secret: ca-certs-australian-defence-organisation-direct-trust-chain
      - secret: ca-certs-boeing
      - secret: ca-certs-carillon-federal-services-trust-chain-1
      - secret: ca-certs-carillon-federal-services-trust-chain-2
      - secret: ca-certs-department-of-state-trust-chain-1
      - secret: ca-certs-department-of-state-trust-chain-2
      - secret: ca-certs-digicert-federal-ssp-trust-chain-1
      - secret: ca-certs-digicert-federal-ssp-trust-chain-2
      - secret: ca-certs-digicert-nfi-trust-chain-1
      - secret: ca-certs-digicert-nfi-trust-chain-2
      - secret: ca-certs-entrust-federal-ssp-trust-chain-1
      - secret: ca-certs-entrust-federal-ssp-trust-chain-2
      - secret: ca-certs-entrust-managed-service-nfi
      - secret: ca-certs-exostar-llc
      - secret: ca-certs-identrust-nfi
      - secret: ca-certs-lockheed-martin
      - secret: ca-certs-netherlands-ministry-of-defence
      - secret: ca-certs-northrop-grumman
      - secret: ca-certs-raytheon-trust-chain-1
      - secret: ca-certs-raytheon-trust-chain-2
      - secret: ca-certs-us-treasury-ssp-trust-chain-1
      - secret: ca-certs-us-treasury-ssp-trust-chain-2
      - secret: ca-certs-verizon-cybertrust-federal-ssp
      - secret: ca-certs-widepoint-federal-ssp-trust-chain-1
      - secret: ca-certs-widepoint-federal-ssp-trust-chain-2
      - secret: ca-certs-widepoint-nfi
      - secret: ca-certs-dod-intermediate-and-issuing-ca-certs
      - secret: ca-certs-dod-trust-anchors-self-signed
      - secret: ca-certs-eca
  {{end}}

  # added to help with Gitlab sub-chart configuration
  image:
    pullPolicy: {{ .Values.imagePullPolicy }}
    
  istio:
    enabled: {{ .Values.istio.enabled }}
    injection: {{ dig "istio" "injection" "enabled" .Values.addons.gitlab }}

  hosts:
    domain: {{ $domainName }}

    gitlab:
      name: {{ .Values.addons.gitlab.hostnames.gitlab }}.{{ $domainName }}

    registry:
      name: {{ .Values.addons.gitlab.hostnames.registry }}.{{ $domainName }}

  {{- if or (ne .Values.addons.gitlab.objectStorage.iamProfile "") $extObjStorageIsConfigured }}
  minio:
    enabled: false
  {{- end }}

  {{- if .Values.addons.gitlab.database.host }}
  psql:
    host: {{ .Values.addons.gitlab.database.host }}
    port: {{ .Values.addons.gitlab.database.port }}
    username: {{ .Values.addons.gitlab.database.username }}
    database: {{ .Values.addons.gitlab.database.database }}
    password:
      secret: gitlab-database
      key: PGPASSWORD
  {{- end }}

  {{- if $extObjStorageIsConfigured }}
  registry:
    {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
    bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-registry
    {{- else }}
    bucket: gitlab-registry
    {{- end }}
  {{- end }}

  {{- if or .Values.addons.gitlab.sso.enabled $extObjStorageIsConfigured }}
  appConfig:
    {{- end }}

    {{- if .Values.addons.gitlab.sso.enabled }}
    omniauth:
      enabled: true
      {{- $global := .Values.addons.gitlab.values.global | default dict }}
      {{- $appConfig := $global.appConfig | default dict }}
      {{- $omniauth := $appConfig.omniauth | default dict }}
      {{- if hasKey $omniauth "allowSingleSignOn" }}
      allowSingleSignOn: {{ .Values.addons.gitlab.values.global.appConfig.omniauth.allowSingleSignOn }}
      {{- else }}
      allowSingleSignOn: ['openid_connect']
      {{- end }}
      {{- if hasKey $omniauth "blockAutoCreatedUsers" }}
      blockAutoCreatedUsers: {{ .Values.addons.gitlab.values.global.appConfig.omniauth.blockAutoCreatedUsers }}
      {{- else }}
      blockAutoCreatedUsers: false
      {{- end }}

      providers:
        - secret: gitlab-sso-provider
          key: gitlab-sso.json
    {{- end }}

    {{- if $extObjStorageIsConfigured }}
    lfs:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-lfs
      {{- else }}
      bucket: gitlab-lfs
      {{- end }}
      {{- if not (dig "global" "appConfig" "object_store" "enabled" false .Values.addons.gitlab.values)}}
      connection:
        secret: gitlab-object-storage
        key: rails
      {{- end }}

    artifacts:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-artifacts
      {{- else }}
      bucket: gitlab-artifacts
      {{- end }}
      {{- if not (dig "global" "appConfig" "object_store" "enabled" false .Values.addons.gitlab.values)}}
      connection:
        secret: gitlab-object-storage
        key: rails
      {{- end }}

    uploads:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-uploads
      {{- else }}
      bucket: gitlab-uploads
      {{- end }}
      {{- if not (dig "global" "appConfig" "object_store" "enabled" false .Values.addons.gitlab.values)}}
      connection:
        secret: gitlab-object-storage
        key: rails
      {{- end }}

    packages:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-packages
      {{- else }}
      bucket: gitlab-packages
      {{- end }}
      {{- if not (dig "global" "appConfig" "object_store" "enabled" false .Values.addons.gitlab.values)}}
      connection:
        secret: gitlab-object-storage
        key: rails
      {{- end }}

    externalDiffs:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-mr-diffs
      {{- else }}
      bucket: gitlab-mr-diffs
      {{- end }}
      {{- if not (dig "global" "appConfig" "object_store" "enabled" false .Values.addons.gitlab.values)}}
      connection:
        secret: gitlab-object-storage
        key: rails
      {{- end }}

    terraformState:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-terraform-state
      {{- else }}
      bucket: gitlab-terraform-state
      {{- end }}
      {{- if not (dig "global" "appConfig" "object_store" "enabled" false .Values.addons.gitlab.values)}}
      connection:
        secret: gitlab-object-storage
        key: rails
      {{- end }}

    dependencyProxy:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-dependency-proxy
      {{- else }}
      bucket: gitlab-dependency-proxy
      {{- end }}
      {{- if not (dig "global" "appConfig" "object_store" "enabled" false .Values.addons.gitlab.values)}}
      connection:
        secret: gitlab-object-storage
        key: rails
      {{- end }}

    pseudonymizer:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-pseudo
      {{- else }}
      bucket: gitlab-pseudo
      {{- end }}
      connection:
        secret: gitlab-object-storage
        key: rails

    backups:
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      bucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-backup
      {{- else }}
      bucket: gitlab-backup
      {{- end }}
      {{- if .Values.addons.gitlab.objectStorage.bucketPrefix }}
      tmpBucket: {{ .Values.addons.gitlab.objectStorage.bucketPrefix }}-gitlab-backup-tmp
      {{- else }}
      tmpBucket: gitlab-backup-tmp
    {{- end }}
  {{- end }}

  {{- if and (ne .Values.addons.gitlab.redis.password "") (or .Values.addons.gitlab.enabled .Values.addons.gitlabRunner.enabled) }}
  redis:  
    password:
      secret: "gitlab-redis-secret-bb"
  {{- end }}

  {{- if .Values.addons.gitlab.smtp.password }}
  smtp:
    password:
      secret: "gitlab-smtp-password"
  {{- end }}

  {{- if .Values.addons.gitlab.railsSecret }}
  railsSecrets:
    secret: "gitlab-rails-secret-bb"
  {{- end }}


{{- if ne .Values.addons.gitlab.objectStorage.iamProfile "" }}
use_iam_profile: true
{{- end }}
{{- end -}}



{{- /* This function merges defaults in lists from above into overlays */ -}}
{{- /* The end user will not have to replicate exclusions/repos from above when providing an overlay */ -}}
{{- /* There is a hidden flag `skipOverlayMerge` that can be added to any certificates to ignore the defaults */ -}}
{{- define "bigbang.overlays.gitlab" }}

  {{- $defaults := fromYaml (include "bigbang.defaults.gitlab" .) }}

  {{- $overlays := dig "values" dict .Values.addons.gitlab }}
  {{- range $certificates, $default := $defaults.global }}
    {{- $overlay := (dig "global" $certificates dict $overlays) }}
    # Only continue if an overlay matches a default constriant and hidden "skipOverlayMerge" is not set
    {{- if and $overlay (not $overlay.skipOverlayMerge) }}

      # Add any default excludedNamespaces to overlay
      {{- if and (dig "customCAs"  list $default) (dig "customCAs"  list $overlay) }}

         {{ $_ := set $overlay "customCAs" (concat $default.customCAs $overlay.customCAs) }}

      {{- end }}
    {{- end }}
  {{- end }}
{{ toYaml $overlays }}
{{- end }}
