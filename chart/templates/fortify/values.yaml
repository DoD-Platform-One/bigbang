{{- $pkg := "fortify" }}

{{- /* Create secret */ -}}
{{- if (get .Values.addons $pkg).enabled }}
{{- include "values-secret" (dict "root" $ "package" (get .Values.addons $pkg) "name" $pkg "defaults" (include (printf "bigbang.defaults.%s" $pkg) .)) }}
{{- end }}

{{- define "bigbang.defaults.fortify" -}}
{{- $istioEnabled := eq (include "istioEnabled" .) "true" -}}

imagePullSecrets:
- name: private-registry
imagePullPolicy: {{ .Values.imagePullPolicy }}

externalURL: https://fortify.{{ .Values.domain }}

domain: {{ .Values.domain }}

istio:
  enabled: {{ $istioEnabled }}
  hardened:
    enabled: {{ or
      (dig "istio" "hardened" "enabled" false .Values.addons.fortify.values)
      (dig "hardened" "enabled" false .Values.istio.values)
    }}
  fortify:
    gateways:
      - {{ include "getGatewayName" (dict "gateway" .Values.addons.fortify.ingress.gateway "root" .)}}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}
  ingressLabels:
    {{- include "getGatewaySelector" (dict "pkg" .Values.addons.fortify "root" .) | nindent 4 }}
  istioNamespaceSelector:
  {{ include "istioNamespaceSelector" . | nindent 4 }}

openshift: {{ .Values.openshift }}

monitoring:
  enabled: {{ .Values.monitoring.enabled }}

sso:
  enabled: {{ default "false" .Values.addons.fortify.sso.enabled }}

{{- end }}
