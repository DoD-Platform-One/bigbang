{{- if .Values.fluentbit.enabled }}
{{- include "values-secret" (dict "root" $ "package" .Values.fluentbit "name" "fluentbit" "defaults" (include "bigbang.defaults.fluentbit" .)) }}
{{- end }}

{{- define "bigbang.defaults.fluentbit" -}}
{{- $disableDefault := dig "additionalOutputs" "disableDefault" false .Values.fluentbit.values }}
{{- $clusterName := ( default "logging-loki" .Values.loki.clusterName ) }}
{{- $istioEnabled := eq (include "istioEnabled" .) "true" }}
{{- $istioInjection := (and $istioEnabled (eq (dig "istio" "injection" "enabled" .Values.fluentbit) "enabled")) }}

{{- $lokiServiceMap := dict
    "monolith" "logging-loki"
    "scalable" "logging-loki-write"
    "distributed" "logging-loki-distributor"
}}
{{- $lokiServiceName := index $lokiServiceMap .Values.loki.strategy }}
{{- $lokiWriteDestUrl := printf "%s.logging" $lokiServiceName }}

networkPolicies:
  enabled: {{ .Values.networkPolicies.enabled }}
  controlPlaneCidr: {{ .Values.networkPolicies.controlPlaneCidr }}
  istioNamespaceSelector:
  {{ include "istioNamespaceSelector" . | nindent 4 }}

istio:
  enabled: {{ $istioEnabled }}
  hardened:
    enabled: {{ or
      (dig "istio" "hardened" "enabled" false .Values.fluentbit.values)
      (dig "hardened" "enabled" false .Values.istiod.values)
    }}

openshift: {{ .Values.openshift }}

upstream:
  imagePullSecrets:
    - name: private-registry

  image:
    pullPolicy: {{ .Values.imagePullPolicy }}

  openShift:
    enabled: {{ .Values.openshift }}

  {{- if .Values.monitoring.enabled }}
  serviceMonitor:
    enabled: true
    namespace: monitoring
    interval: 10s
    scrapeTimeout: 10s
    selector:
      prometheus: monitoring-monitoring-kube-prometheus
    {{- if $istioInjection }}
    scheme: https
    tlsConfig:
      caFile: /etc/prom-certs/root-cert.pem
      certFile: /etc/prom-certs/cert-chain.pem
      keyFile: /etc/prom-certs/key.pem
      insecureSkipVerify: true  # Prometheus does not support Istio security naming, thus skip verifying target pod certificate
    {{- end }}

  dashboards:
    enabled: true
    labelKey: grafana_dashboard
    namespace: monitoring
  {{- end }}

  {{- if $istioEnabled }}
  podAnnotations:
    {{ include "istioAnnotation" . | nindent 2 }}
  {{- end }}

  {{- if .Values.openshift }}
  podSecurityContext:
    seLinuxOptions:
      type: "spc_t"
  {{- end }}

  # Those are BB custom lua scripts so they are taken out from package values file and placed here.
  # https://docs.fluentbit.io/manual/pipeline/filters/lua
  luaScripts:
    add_labels.lua: |
      function add_labels(tag, timestamp, record)
        record["kubernetes"]["labels"]["cluster"] = "{{ $clusterName }}"
        return 1, timestamp, record
      end
    remove_labels.lua: |
      function remove_labels(tag, timestamp, record)

        local patterns = {
          "service.istio.-",
          "security.istio.-",
          "helm.-",
          "istio.-",
          "statefulset.kubernetes.io/pod%-name",
          "prometheus",
          "operator.prometheus.io/name",
          "app.kubernetes.io/managed%-by",
          "app.kubernetes.io/part%-of",
          "apps.kuberentes.io/version",
          "apps.kubernetes.io/pod%-index",
          "heritage",
          "release",
          "elasticsearch.k8s.elastic.co.node.-",
          "vault_active",
          "vault_initialized",
          "vault_perf_standby"
        }

        if record["kubernetes"] ~= nil then
          if record["kubernetes"]["labels"] ~= nil then

            for key, value in pairs(record["kubernetes"]["labels"]) do
              -- Uncomment for debugging
              -- print("Checking - Label " .. key .. "=" .. value)

              local remove_key = false
              local i = 1
              while not remove_key and i <= #patterns do
                if string.match(key, patterns[i]) then
                  remove_key = true
                end
                i = i + 1
              end

              -- Key matched a pattern, remove it
              if remove_key then
                -- Uncomment for debugging
                -- print("Removing - Label " .. key .. "=" .. value)
                record["kubernetes"]["labels"][key] = nil
              end
            end

          end
        end

        return 1, timestamp, record
      end

{{- if (not $disableDefault) }}
  {{- $additionalElasticsearch := (and
    (dig "additionalOutputs" "elasticsearch" "host" false .Values.fluentbit.values)
    (dig "additionalOutputs" "elasticsearch" "port" false .Values.fluentbit.values)
    (dig "additionalOutputs" "elasticsearch" "user" false .Values.fluentbit.values)
    (dig "additionalOutputs" "elasticsearch" "password" false .Values.fluentbit.values))
  }}
  {{- $additionalFluentd := (and
    (dig "additionalOutputs" "fluentd" "host" false .Values.fluentbit.values)
    (dig "additionalOutputs" "fluentd" "port" false .Values.fluentbit.values)
    (or
      (and
        (dig "additionalOutputs" "fluentd" "user" false .Values.fluentbit.values)
        (dig "additionalOutputs" "fluentd" "password" false .Values.fluentbit.values))
      (dig "additionalOutputs" "fluentd" "sharedKey" false .Values.fluentbit.values)))
  }}
  {{- $additionalLoki := (and
    (dig "additionalOutputs" "loki" "host" false .Values.fluentbit.values)
    (dig "additionalOutputs" "loki" "port" false .Values.fluentbit.values))
  }}
  {{- $additionalS3 := (and
    (dig "additionalOutputs" "s3" "bucket" false .Values.fluentbit.values)
    (dig "additionalOutputs" "s3" "region" false .Values.fluentbit.values)
    (or
      (and
        (dig "additionalOutputs" "s3" "aws_secret_access_key" false .Values.fluentbit.values)
        (dig "additionalOutputs" "s3" "aws_access_key_id" false .Values.fluentbit.values))
        (dig "additionalOutputs" "s3" "existingSecret" false .Values.fluentbit.values)))
  }}
  {{- $envFrom := (dig "upstream" "envFrom" false .Values.fluentbit.values) }}
  {{- if or
    $additionalElasticsearch
    $additionalLoki
    $envFrom
    $additionalFluentd
    $additionalS3
  }}
  envFrom:
    {{- if $envFrom }}
    {{- toYaml $envFrom | nindent 4 }}
    {{- end }}
    {{- if $additionalElasticsearch }}
    - secretRef:
        name: external-es-config
    {{- end }}
    {{- if $additionalLoki }}
    - secretRef:
        name: external-loki-config
    {{- end }}
    {{- if $additionalFluentd }}
    - secretRef:
        name: external-fluentd-config
    {{- end }}
    {{- if and $additionalS3 (dig "additionalOutputs" "s3" "existingSecret" false .Values.fluentbit.values) }}
    - secretRef:
        name: {{ (dig "additionalOutputs" "s3" "existingSecret" false .Values.fluentbit.values) }}
    {{- else if $additionalS3 }}
    - secretRef:
        name: external-s3-config
    {{- end }}
  {{- end }}
  {{- if .Values.elasticsearchKibana.enabled }}
  env:
    - name: FLUENT_ELASTICSEARCH_PASSWORD
      valueFrom:
        secretKeyRef:
          name: logging-ek-es-elastic-user
          key: elastic
  {{- end }}
  {{- $additionalElasticsearchCerts := and
    (dig "additionalOutputs" "elasticsearch" "tlsVerify" false .Values.fluentbit.values)
    (dig "additionalOutputs" "elasticsearch" "caCert" false .Values.fluentbit.values)
  }}
  {{- $additionalFluentdCerts := and
    (dig "additionalOutputs" "fluentd" "tlsVerify" false .Values.fluentbit.values)
    (dig "additionalOutputs" "fluentd" "caCert" false .Values.fluentbit.values)
  }}
  {{- $additionalLokiCerts := and
    (dig "additionalOutputs" "loki" "tlsVerify" false .Values.fluentbit.values)
    (dig "additionalOutputs" "loki" "caCert" false .Values.fluentbit.values)
  }}
  {{- if or
    .Values.elasticsearchKibana.enabled
    $additionalElasticsearchCerts
    $additionalFluentdCerts
    $additionalLokiCerts
    $additionalS3
  }}
  extraVolumes:
    {{- if .Values.elasticsearchKibana.enabled }}
    - hostPath:
        path: /var/log/flb-storage/
        type: DirectoryOrCreate
      name: flb-storage
    - secret:
        secretName: logging-ek-es-http-certs-public
      name: elasticsearch-certs
    {{- end }}
    {{- if $additionalElasticsearchCerts }}
    - name: external-es-ca-cert
      secret:
        secretName: external-es-ca-cert
    {{- end }}
    {{- if $additionalFluentdCerts }}
    - name: external-fluentd-ca-cert
      secret:
        secretName: external-fluentd-ca-cert
    {{- end }}
    {{- if $additionalLokiCerts }}
    - name: external-loki-ca-cert
      secret:
        secretName: external-loki-ca-cert
    {{- end }}
    {{- if $additionalS3 }}
    - name: fluentbit-temp
      emptyDir: {}
    {{- end }}
  {{- end }}
  {{-  if or
    .Values.elasticsearchKibana.enabled
    $additionalElasticsearchCerts
    $additionalFluentdCerts
    $additionalLokiCerts
    $additionalS3
  }}
  extraVolumeMounts:
    {{- if .Values.elasticsearchKibana.enabled }}
    - mountPath: /var/log/flb-storage/
      name: flb-storage
      readOnly: false
    - mountPath: /etc/elasticsearch/certs/
      name: elasticsearch-certs
    {{- end }}
    {{- if $additionalElasticsearchCerts }}
    - name: external-es-ca-cert
      mountPath: /etc/external-es/certs/
    {{- end }}
    {{- if $additionalFluentdCerts }}
    - name: external-fluentd-ca-cert
      mountPath: /etc/external-fluentd/certs/
    {{- end }}
    {{- if $additionalLokiCerts }}
    - name: external-loki-ca-cert
      mountPath: /etc/external-loki/certs/
    {{- end }}
    {{- if $additionalS3 }}
    - name: fluentbit-temp
      mountPath: /tmp/fluent-bit/
    {{- end }}
  {{- end}}
  {{- if or
    .Values.elasticsearchKibana.enabled
    .Values.loki.enabled
    $additionalFluentd
    (and
      (dig "additionalOutputs" "s3" "bucket" false .Values.fluentbit.values)
      (dig "additionalOutputs" "s3" "region" false .Values.fluentbit.values))
  }}
  config:
    outputs: |
      {{- if .Values.elasticsearchKibana.enabled }}
      [OUTPUT]
          Name                     es
          Match                    kube.*
          Host                     {{ dig "elasticsearch" "name" "logging-ek" .Values.fluentbit.values }}-es-http.logging
          HTTP_User                elastic
          HTTP_Passwd              ${FLUENT_ELASTICSEARCH_PASSWORD}
          Logstash_Format          On
          Suppress_Type_Name       On
          Retry_Limit              False
          Replace_Dots             On
          {{- if and $istioEnabled (dig "istio" "elasticsearch" "enabled" false .Values.elasticsearchKibana.values) }}
          tls                      Off
          {{- else }}
          tls                      On
          tls.verify               On
          tls.ca_file              /etc/elasticsearch/certs/ca.crt
          {{- end }}
          storage.total_limit_size {{ dig "storage" "total_limit_size" "10G" .Values.fluentbit.values }}
      [OUTPUT]
          Name                     es
          Match                    host.*
          Host                     {{ dig "elasticsearch" "name" "logging-ek" .Values.fluentbit.values }}-es-http.logging
          HTTP_User                elastic
          HTTP_Passwd              ${FLUENT_ELASTICSEARCH_PASSWORD}
          Logstash_Format          On
          Suppress_Type_Name       On
          Logstash_Prefix          node
          Retry_Limit              False
          tls                      On
          tls.verify               On
          tls.ca_file              /etc/elasticsearch/certs/ca.crt
          storage.total_limit_size {{ dig "storage" "total_limit_size" "10G" .Values.fluentbit.values }}
      {{- end }}

      {{- if .Values.loki.enabled }}
      [OUTPUT]
          name                   loki
          match                  kube.*
          labels                 job=fluentbit, container=$kubernetes['container_name'], pod=$kubernetes['pod_name'], namespace=$kubernetes['namespace_name'], node_name=$kubernetes['host']
          host                   {{ $lokiWriteDestUrl }}
          port                   3100
          auto_kubernetes_labels on
          Retry_Limit            False
          tls                    Off
          storage.total_limit_size {{ dig "storage" "total_limit_size" "10G" .Values.fluentbit.values }}
      [OUTPUT]
          name                   loki
          match                  host.*
          labels                 job=fluentbit, container=$kubernetes['container_name'], pod=$kubernetes['pod_name'], namespace=$kubernetes['namespace_name'], node_name=$kubernetes['host']
          host                   {{ $lokiWriteDestUrl }}
          port                   3100
          auto_kubernetes_labels on
          Retry_Limit            False
          tls                    Off
          storage.total_limit_size {{ dig "storage" "total_limit_size" "10G" .Values.fluentbit.values }}
      {{- end }}

      {{- if $additionalFluentd }}
      {{- $fluentdUser := dig "additionalOutputs" "fluentd" "user" false .Values.fluentbit.values }}
      {{- $fluentdPassword := dig "additionalOutputs" "fluentd" "password" false .Values.fluentbit.values }}
      {{- $fluentdSharedKey := dig "additionalOutputs" "fluentd" "sharedKey" false .Values.fluentbit.values }}
      {{- $fluentdTls := dig "additionalOutputs" "fluentd" "tls" false .Values.fluentbit.values }}
      {{- $fluentdTlsVerify := dig "additionalOutputs" "fluentd" "tlsVerify" false .Values.fluentbit.values }}
      {{- $fluentdCaCert := dig "additionalOutputs" "fluentd" "caCert" false .Values.fluentbit.values }}
      {{- $fluentdAdditionalConfig := dig "additionalOutputs" "fluentd" "additionalConfig" false .Values.fluentbit.values }}
      [OUTPUT]
          Name          forward
          Match         kube.*
          Host          {{ dig "additionalOutputs" "fluentd" "host" false .Values.fluentbit.values }}
          Port          {{ dig "additionalOutputs" "fluentd" "port" false .Values.fluentbit.values }}
          {{- if and $fluentdUser $fluentdPassword }}
          Username      {{ $fluentdUser }}
          Password      {{ $fluentdPassword }}
          {{- else }}
          Shared_Key    {{ $fluentdSharedKey }}
          {{- end }}
          Retry_Limit   False
          storage.total_limit_size {{ dig "storage" "total_limit_size" "10G" .Values.fluentbit.values }}
          tls {{ if $fluentdTls }}On{{ else }}Off{{ end }}
          tls.verify {{ if and $fluentdTlsVerify $fluentdCaCert }}On{{ else }}Off{{ end }}
          {{- if and $fluentdTlsVerify $fluentdCaCert }}
          tls.ca_file   /etc/external-fluentd/certs/ca.crt
          {{- end }}
          {{- if $fluentdAdditionalConfig }}
          {{- range $key, $value := $fluentdAdditionalConfig }}
          {{- $preset := (list "Name" "Match" "Host" "Port" "Username" "Password" "Shared_Key" "Retry_Limit" "tls" "tls.verify" "tls.ca_file") }}
          {{- if has $key $preset }}
          {{- fail (printf "Cannot specify config option `%s`, Big Bang has set a default, please use `outputs` if you need to customize this value." $key) }}
          {{- else }}
          {{ $key }} {{ $value }}
          {{- end }}
          {{- end }}
          {{- end }}
      [OUTPUT]
          Name          forward
          Match         host.*
          Host          {{ dig "additionalOutputs" "fluentd" "host" false .Values.fluentbit.values }}
          Port          {{ dig "additionalOutputs" "fluentd" "port" false .Values.fluentbit.values }}
          {{- if and $fluentdUser $fluentdPassword }}
          Username      {{ $fluentdUser }}
          Password      {{ $fluentdPassword }}
          {{- else }}
          Shared_Key    {{ $fluentdSharedKey }}
          {{- end }}
          Retry_Limit   False
          storage.total_limit_size {{ dig "storage" "total_limit_size" "10G" .Values.fluentbit.values }}
          tls {{ if $fluentdTls }}On{{ else }}Off{{ end }}
          tls.verify {{ if and $fluentdTlsVerify $fluentdCaCert }}On{{ else }}Off{{ end }}
          {{- if and $fluentdTlsVerify $fluentdCaCert }}
          tls.ca_file   /etc/external-fluentd/certs/ca.crt
          {{- end }}
          {{- if $fluentdAdditionalConfig }}
          {{- range $key, $value := $fluentdAdditionalConfig }}
          {{- $preset := (list "Name" "Match" "Host" "Port" "Username" "Password" "Shared_Key" "Retry_Limit" "tls" "tls.verify" "tls.ca_file") }}
          {{- if has $key $preset }}
          {{- fail (printf "Cannot specify config option `%s`, Big Bang has set a default, please use `outputs` if you need to customize this value." $key) }}
          {{- else }}
          {{ $key }} {{ $value }}
          {{- end }}
          {{- end }}
          {{- end }}
      {{- end }}

      {{- $bucket := dig "additionalOutputs" "s3" "bucket" false .Values.fluentbit.values }}
      {{- $region := dig "additionalOutputs" "s3" "region" false .Values.fluentbit.values }}
      {{- $additionalConfig := dig "additionalOutputs" "s3" "additionalConfig" false .Values.fluentbit.values }}
      {{- if and $bucket $region }}
      [OUTPUT]
          Name          s3
          Match         kube.*
          bucket        {{ $bucket }}
          region        {{ $region }}
          Retry_Limit   False
          storage.total_limit_size {{ dig "storage" "total_limit_size" "10G" .Values.fluentbit.values }}
          {{- if $additionalConfig }}
          {{- range $key, $value := $additionalConfig }}
          {{- $preset := (list "Name" "Match" "bucket" "region" "Retry_Limit") }}
          {{- if has $key $preset }}
          {{- fail (printf "Cannot specify config option `%s`, Big Bang has set a default, please use `outputs` if you need to customize this value." $key) }}
          {{- else }}
          {{ $key }}     {{ $value }}
          {{- end }}
          {{- end }}
          {{- end }}
      [OUTPUT]
          Name          s3
          Match         host.*
          bucket        {{ $bucket }}
          region        {{ $region }}
          Retry_Limit   False
          storage.total_limit_size {{ dig "storage" "total_limit_size" "10G" .Values.fluentbit.values }}
          {{- if $additionalConfig }}
          {{- range $key, $value := $additionalConfig }}
          {{- $preset := (list "Name" "Match" "bucket" "region" "Retry_Limit") }}
          {{- if has $key $preset }}
          {{- fail (printf "Cannot specify config option `%s`, Big Bang has set a default, please use `outputs` if you need to customize this value." $key) }}
          {{- else }}
          {{ $key }}     {{ $value }}
          {{- end }}
          {{- end }}
          {{- end }}
      {{- end }}

    filters: |
      {{- if .Values.loki.enabled }}
      [FILTER]
          Name kubernetes
          Match kube.*
          Kube_CA_File /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          Kube_Token_File /var/run/secrets/kubernetes.io/serviceaccount/token
          Merge_Log On
          Merge_Log_Key log_processed
          K8S-Logging.Parser On
          K8S-Logging.Exclude Off
          Buffer_Size 1M
      [FILTER]
          Name          lua
          Match         kube.*
          script        /fluent-bit/scripts/remove_labels.lua
          call          remove_labels
      [FILTER]
          Alias         lua.add
          Name          lua
          Match         kube.*
          script        /fluent-bit/scripts/add_labels.lua
          call          add_labels
      {{- end }}
  {{- end }}

loki:
  enabled: {{ .Values.loki.enabled }}

elasticsearchKibana:
  enabled: {{ .Values.elasticsearchKibana.enabled }}
{{- end }}
{{- end -}}
