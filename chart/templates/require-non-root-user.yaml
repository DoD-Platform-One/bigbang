{{- $name := "require-non-root-user" }}
{{- if and .Values.enabled (dig $name "enabled" false .Values.policies) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: {{ $name }}
  annotations:
    policies.kyverno.io/title: Reqire Non-root User
    policies.kyverno.io/category: Pod Security Standards (Restricted)
    policies.kyverno.io/severity: {{ default "high" (dig $name "severity" nil .Values.policies) }}
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Following the least privilege principle, containers should not be run as root. This policy ensures
      containers either have `runAsNonRoot` set to `true` or `runAsUser` > 0.
  labels: {{- include "kyverno-policies.labels" . | nindent 4 }}
spec:
  {{- include "kyverno-policies.webhookTimeoutSeconds" (merge (dict "name" $name) .) | indent 2 }}
  validationFailureAction: {{ default (dig $name "validationFailureAction" nil .Values.policies) .Values.validationFailureAction }}
  rules:
  - name: non-root-user
    {{- include "kyverno-policies.exclude" (merge (dict "name" $name) .) | indent 4 }}
    {{- include "kyverno-policies.match" (merge (dict "name" $name "kinds" (list "Pod")) .) | nindent 4 }}
    {{- include "kyverno-policies.precondition.default" . | nindent 4 }}
    validate:
      message: >-
        Either `runAsNonRoot` must be set to true or `runAsUser` must be > 0 in
        spec.securityContext or (spec.containers[*].securityContext,
        spec.initContainers[*].securityContext, and spec.ephemeralContainers[*].securityContext)
      anyPattern:
      - spec:
          securityContext:
            runAsNonRoot: true
          containers:
          - =(securityContext):
              =(runAsNonRoot): true
          =(initContainers):
          - =(securityContext):
              =(runAsNonRoot): true
          =(ephemeralContainers):
          - =(securityContext):
              =(runAsNonRoot): true
      - spec:
          securityContext:
            runAsUser: ">0"
          containers:
          - =(securityContext):
              =(runAsUser): ">0"
          =(initContainers):
          - =(securityContext):
              =(runAsUser): ">0"
          =(ephemeralContainers):
          - =(securityContext):
              =(runAsUser): ">0"
      - spec:
          containers:
          - securityContext:
              runAsNonRoot: true
          =(initContainers):
          - securityContext:
              runAsNonRoot: true
          =(ephemeralContainers):
          - securityContext:
              runAsNonRoot: true
      - spec:
          containers:
          - securityContext:
              runAsUser: ">0"
          =(initContainers):
          - securityContext:
              runAsNonRoot: true
          =(ephemeralContainers):
          - securityContext:
              runAsNonRoot: true
      - spec:
          containers:
          - securityContext:
              runAsNonRoot: true
          =(initContainers):
          - securityContext:
              runAsUser: ">0"
          =(ephemeralContainers):
          - securityContext:
              runAsNonRoot: true
      - spec:
          containers:
          - securityContext:
              runAsUser: ">0"
          =(initContainers):
          - securityContext:
              runAsUser: ">0"
          =(ephemeralContainers):
          - securityContext:
              runAsNonRoot: true
      - spec:
          containers:
          - securityContext:
              runAsNonRoot: true
          =(initContainers):
          - securityContext:
              runAsNonRoot: true
          =(ephemeralContainers):
          - securityContext:
              runAsUser: ">0"
      - spec:
          containers:
          - securityContext:
              runAsUser: ">0"
          =(initContainers):
          - securityContext:
              runAsNonRoot: true
          =(ephemeralContainers):
          - securityContext:
              runAsUser: ">0"
      - spec:
          containers:
          - securityContext:
              runAsNonRoot: true
          =(initContainers):
          - securityContext:
              runAsUser: ">0"
          =(ephemeralContainers):
          - securityContext:
              runAsUser: ">0"
      - spec:
          containers:
          - securityContext:
              runAsUser: ">0"
          =(initContainers):
          - securityContext:
              runAsUser: ">0"
          =(ephemeralContainers):
          - securityContext:
              runAsUser: ">0"
{{- end -}}